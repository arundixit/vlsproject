
<div class="art-nav-inner">

  <ul class="art-hmenu"><li><%= link_to 'Leave Account', leave_accounts_path %></li><li><%= link_to 'Leave type', leave_types_path %></li><li><%= link_to 'Attendence status', attendence_statuses_path %></li><li>  <%= link_to 'Attendence', attendences_path %> </li>

    <li><%= link_to 'Payslip Report', payslipreports_path %></li></ul> </div></br>   </br>



<img  alt="" src="images/object367196465.png">
 <% @e= params[:id] %>

<% params[:Date] %>
<% params[:year] %>
<%params[:profile][:grad_year] %>

 <center>




<b>Employee Id: <%= @employee.code %> <br/>
  Employee Name: <%= @employee.name %> </b>    <br/>
 <b>Designation: <%= @employee.department.name %> </b>   <br/>

   <b>Payslip for Month:  <%= params[:month] %> Year:<%= params[:profile][:grad_year] %> </b>

   <br/>



         <table border="1" cellpadding="1" cellspacing="1"  style="background-color: #D6D6D6; width:40%">
      <tbody>
      <tr>
        <td >
           <h3>Earnigs</h3>
           </td>
        <td></td>
        <td> <h3>Deductions</h3></td>
        <td>


        </td></tr><tr>   <td>




         <% @employee.salary.amount %>
          <% @employee.shift.name %>

          Basic Salary    <br/>

          Dearness Allowance   <br/>
          House Rent Allowance <br/>
          Medical Allowance    <br/>
          Conveyance Allowance   <br/>
          Mobile Allowance   <br/>

            </td>

        <td>
          <%= @employee.salary.basic_salary %> <br/>
          <%= @employee.salary.dearness_allowance %> <br/>
          <%= @employee.salary.house_rent_allowance %> <br/>
          <%= @employee.salary.medical_allowance %> <br/>
          <%= @employee.salary.conveyance_allowance %> <br/>
          <%= @employee.salary.mobile_allowance %> <br/>

        </td><td>
        Provident Fund  <br/>
        E.S.I    <br/>
        Loan        <br/>
        Profession Tax      <br/>
        TSD/IT <br/>
               Advance Amount


        </td>

        <td >
          <%= @employee.salary.provident_fund %> <br/>
          <%= @employee.salary.esi %> <br/>
          <%= @employee.salary.loan %> <br/>
          <%= @employee.salary.profession_tax %> <br/>
          <%= @employee.salary.tsd_it %> <br/>
          <%= @employee.salary.amount %>


          <!--% end %-->


        </td>

      </tr>

      <tr>
        <td >
          <h3>Total Addition</h3>
        </td>
        <td>
        <%  @addition=0 %>
 <%
    @addition= (@employee.salary.basic_salary.to_i+@employee.salary.dearness_allowance.to_i+@employee.salary.house_rent_allowance.to_i+@employee.salary.medical_allowance.to_i+@employee.salary.conveyance_allowance.to_i+@employee.salary.mobile_allowance.to_i);

 %>

       <%= @addition%>

        </td>
        <td> <h3>Total Deduction</h3></td>
        <td>

          <%
             @deduction= (@employee.salary.provident_fund.to_i+@employee.salary.esi.to_i+@employee.salary.loan.to_i+@employee.salary.profession_tax.to_i+@employee.salary.tsd_it.to_i+@employee.salary.amount.to_i);

          %>

          <%= @deduction%>


        </td></tr>


      <tr>
        <td >

        </td>
        <td>


        </td>
        <td> <h3>Net Salary</h3></td>
        <td>

          <!--%

             total_month_days = Time.days_in_month(1)

             if   @employee.salary.amount>=0

               if  @employee.leave_accounts.count>=0

                 @x =   @employee.salary.amount - (@employee.salary.amount/total_month_days)*@employee.leave_accounts.count  ;
          %-->




                  <!--%= @x %-->

              <!--%end end %-->

                  <%   @netsalary= @addition-@deduction%>
          <%= @netsalary%>


        </td></tr>


    </table>
       <br/>




   <%= "Signature of The Employee____________________"%>
   <%= "Accountant________________"%>
         </center>


 <br/>



 <!--<script type="text/javascript" src="http://abhi-sanoujam-blogspot-posts.googlecode.com/svn/trunk/js/jquery-1.3.2.min.js"></script>
 <script type="text/javascript">
     function NumberToWords() {

         var units = [ "Zero", "One", "Two", "Three", "Four", "Five", "Six",
             "Seven", "Eight", "Nine", "Ten" ];
         var teens = [ "Eleven", "Twelve", "Thirteen", "Fourteen", "Fifteen",
             "Sixteen", "Seventeen", "Eighteen", "Nineteen", "Twenty" ];
         var tens = [ "", "Ten", "Twenty", "Thirty", "Forty", "Fifty", "Sixty",
             "Seventy", "Eighty", "Ninety" ];

         var othersIndian = [ "Thousand", "Lakh", "Crore" ];

         var othersIntl = [ "Thousand", "Million", "Billion", "Trillion" ];

         var INDIAN_MODE = "indian";
         var INTERNATIONAL_MODE = "international";
         var currentMode = INDIAN_MODE;

         var getBelowHundred = function(n) {
             if (n >= 100) {
                 return "greater than or equal to 100";
             };
             if (n <= 10) {
                 return units[n];
             };
             if (n <= 20) {
                 return teens[n - 10 - 1];
             };
             var unit = Math.floor(n % 10);
             n /= 10;
             var ten = Math.floor(n % 10);
             var tenWord = (ten > 0 ? (tens[ten] + " ") : '');
             var unitWord = (unit > 0 ? units[unit] : '');
             return tenWord + unitWord;
         };

         var getBelowThousand = function(n) {
             if (n >= 1000) {
                 return "greater than or equal to 1000";
             };
             var word = getBelowHundred(Math.floor(n % 100));

             n = Math.floor(n / 100);
             var hun = Math.floor(n % 10);
             word = (hun > 0 ? (units[hun] + " Hundred ") : '') + word;

             return word;
         };

         return {
             numberToWords : function(n) {
                 if (isNaN(n)) {
                     return "Not a number";
                 };

                 var word = '';
                 var val;

                 val = Math.floor(n % 1000);
                 n = Math.floor(n / 1000);

                 word = getBelowThousand(val);

                 if (this.currentMode == INDIAN_MODE) {
                     othersArr = othersIndian;
                     divisor = 100;
                     func = getBelowHundred;
                 } else if (this.currentMode == INTERNATIONAL_MODE) {
                     othersArr = othersIntl;
                     divisor = 1000;
                     func = getBelowThousand;
                 } else {
                     throw "Invalid mode - '" + this.currentMode
                             + "'. Supported modes: " + INDIAN_MODE + "|"
                             + INTERNATIONAL_MODE;
                 };

                 var i = 0;
                 while (n > 0) {
                     if (i == othersArr.length - 1) {
                         word = this.numberToWords(n) + " " + othersArr[i] + " "
                                 + word;
                         break;
                     };
                     val = Math.floor(n % divisor);
                     n = Math.floor(n / divisor);
                     if (val != 0) {
                         word = func(val) + " " + othersArr[i] + " " + word;
                     };
                     i++;
                 };
                 return word;
             },
             setMode : function(mode) {
                 if (mode != INDIAN_MODE && mode != INTERNATIONAL_MODE) {
                     throw "Invalid mode specified - '" + mode
                             + "'. Supported modes: " + INDIAN_MODE + "|"
                             + INTERNATIONAL_MODE;
                 };
                 this.currentMode = mode;
             }
         }
     }

     function clear() {
         $("#errSpan").hide();
         $("#resultDiv").hide();
     }

     var num2words = new NumberToWords();

     function translate() {
         clear();
         var input = $("#input").val();
         if (isNaN(input)) {
             $("#errSpan").html("This is not a number - " + input);
             $("#errSpan").show();
             $("#input").focus();
             return;
         };

         num2words.setMode("indian");
         var indian = num2words.numberToWords(input);

         num2words.setMode("international");
         var intl = num2words.numberToWords(input);

         $("#resultDiv").html(
                 "<table bgcolor='#CCFFFF'><tr><td>In India</td><td>" + indian
                         + "</td></tr><tr><td>Internationally</td><td>" + intl
                         + "</td></tr></table>");
         $("#resultDiv").show("slow");

     }

     $(document).ready( function() {
         $("#resultDiv").hide();
         $("#input").focus();
         $(document).keypress( function(e) {
             if (e.keyCode == 27) {
                 clear();
             };
             if (e.keyCode == 13) {
                 translate();
             };
         });
     });
 </script>

 <div id="content" align="center">[you can use enter and escape]

   <span id="errSpan" style="color: #FF0000;"></span>
   <div> <input id="input" type="text" size="15"  /><input
   type="button" onload="translate()" value="Convert to words" /></div>

   <div id="resultDiv" style="border: solid black 1px;"></div>
 </div>-->



